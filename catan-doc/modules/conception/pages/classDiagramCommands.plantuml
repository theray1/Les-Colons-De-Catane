@startuml
  abstract Trade {}
  abstract CommandWithContext implements Command{
  CommandContext context
  ~ final Set<Player> recipient
  }
  class TradeWithPlayer {}
  class TradeWithNonPlayerEntity {}
  class AcceptTrade {}
  class DenyTrade {}
  class BuyCard {}
  class MoveThieve {}
  class Build {}
  class ActiveCard {}
  class Ping {}
  class ActivateThieve {}
  class Win {}
  class SetResources{}
  class AddResources{}
  class AddCard{}
  class StartTurn{}
  class EndTurn{}
  class Login{}
  class LoginComplete{}
  class SetGame{}
  class SetPlayer{}
  
  interface Player{}
  
  interface Command{
  	+execute()
  	+getRecipients() : Player[]
  }
  
  Trade <|-left- TradeWithPlayer
  Trade <|-up- TradeWithNonPlayerEntity
  Trade <|-down- AcceptTrade
  Trade <|-right- DenyTrade
  
  Command <|-down- CommandWithContext
  Command <|-down- Login
  CommandWithContext <|-down- LoginComplete
  CommandWithContext <|-left- BuyCard
  CommandWithContext <|-left- MoveThieve
  CommandWithContext <|-right- Build
  CommandWithContext <|-right- ActiveCard
  CommandWithContext <|-up- SetGame
  CommandWithContext <|-up- Ping
  CommandWithContext <|-up- ActivateThieve
  CommandWithContext <|-up- AddResources
  CommandWithContext <|-down- AddCard
  CommandWithContext <|-down- Win
  CommandWithContext <|-down- SetResources
  CommandWithContext <|-down- SetPlayer
  CommandWithContext <|-- EndTurn
  CommandWithContext <|-- StartTurn
  CommandWithContext <|-- Trade
  
  CommandWithContext *-- "1-4" Player
@enduml
